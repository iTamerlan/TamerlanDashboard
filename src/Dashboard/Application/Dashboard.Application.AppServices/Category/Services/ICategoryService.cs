// ------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой EngineApp Tamerlan I.V.
//     Изменения в этом файле могут привести к неправильной работе
//     и будут потеряны в случае повторного создания кода.
// </auto-generated>
// ------------------------------------------------------------------------------

using Dashboard.Contracts.Category;

namespace Dashboard.Application.AppServices.Contexts.Category.Services

{
/// <summary>
/// Сервис работы с категориями.
/// </summary>
public interface ICategoryService
{
    /// <summary>
    /// Возвращает Категория по идентификатору.
    /// </summary>
    /// <param name="id">Идентификатор Категории.</param>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <returns>Модель Категории <see cref="Domain.Categorys.Category"/></returns>
    Task<Domain.Categorys.Category> GetByIdAsync(Guid id, CancellationToken cancellationToken);

    /// <summary>
    /// Возвращает список -- Категории.
    /// </summary>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <returns>Список моделей Категории <see cref="CategoryDto"/></returns>
    Task<CategoryDto[]> GetAllAsync(CancellationToken cancellationToken);

    /// <summary>
    /// Возвращает список -- Категории, постранично в зависимости от размера страницы и индекса страницы.
    /// </summary>
    /// <param name="id">Идентификатор Категории.</param>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <param name="pageSize">Размер страницы.</param>
    /// <param name="pageIndex">Номер страницы.</param>
    /// <returns>Список моделей -- Категории <see cref="CategoryDto"/></returns>
    Task<CategoryDto[]> GetPageAsync(int pageSize, int pageIndex, CancellationToken cancellationToken);

    /// <summary>
    /// Создает Категория по модели.
    /// </summary>
    /// <param name="model">Модель Категории.</param>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <returns>Идентификатор созданной сущности</returns>
    Task<Guid> CreateAsync(CreateCategoryDto model, CancellationToken cancellationToken);

    /// <summary>
    /// Обновляет(изменяет) Категория по модели.
    /// </summary>
    /// <param name="model">Модель Категории.</param>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <returns>Модель Категории <see cref="Domain.Categorys.Category"/></returns>
    Task<Domain.Categorys.Category> UpdateAsync(UpdateCategoryDto model, CancellationToken cancellationToken);

    /// <summary>
    /// Удаляет Категория по модели.
    /// </summary>
    /// <param name="id">Идентификатор Категории.</param>
    /// <param name="model">Модель Категории.</param>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <returns>Идентификатор удаленного Категории</returns>
    Task<Guid> DeleteAsync(Guid id, CancellationToken cancellationToken);
}
}

