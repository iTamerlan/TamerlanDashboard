// ------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой EngineApp Tamerlan I.V.
//     Изменения в этом файле могут привести к неправильной работе
//     и будут потеряны в случае повторного создания кода.
// </auto-generated>
// ------------------------------------------------------------------------------

using Dashboard.Contracts.Bookmark;

namespace Dashboard.Application.AppServices.Contexts.Bookmark.Services

{
/// <summary>
/// Сервис работы с закладками.
/// </summary>
public interface IBookmarkService
{
    /// <summary>
    /// Возвращает Закладка по идентификатору.
    /// </summary>
    /// <param name="id">Идентификатор Закладки.</param>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <returns>Модель Закладки <see cref="Domain.Bookmarks.Bookmark"/></returns>
    Task<Domain.Bookmarks.Bookmark> GetByIdAsync(Guid id, CancellationToken cancellationToken);

    /// <summary>
    /// Возвращает список -- Закладки.
    /// </summary>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <returns>Список моделей Закладки <see cref="BookmarkDto"/></returns>
    Task<BookmarkDto[]> GetAllAsync(CancellationToken cancellationToken);

    /// <summary>
    /// Возвращает список -- Закладки, постранично в зависимости от размера страницы и индекса страницы.
    /// </summary>
    /// <param name="id">Идентификатор Закладки.</param>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <param name="pageSize">Размер страницы.</param>
    /// <param name="pageIndex">Номер страницы.</param>
    /// <returns>Список моделей -- Закладки <see cref="BookmarkDto"/></returns>
    Task<BookmarkDto[]> GetPageAsync(int pageSize, int pageIndex, CancellationToken cancellationToken);

    /// <summary>
    /// Создает Закладка по модели.
    /// </summary>
    /// <param name="model">Модель Закладки.</param>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <returns>Идентификатор созданной сущности</returns>
    Task<Guid> CreateAsync(CreateBookmarkDto model, CancellationToken cancellationToken);

    /// <summary>
    /// Обновляет(изменяет) Закладка по модели.
    /// </summary>
    /// <param name="model">Модель Закладки.</param>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <returns>Модель Закладки <see cref="Domain.Bookmarks.Bookmark"/></returns>
    Task<Domain.Bookmarks.Bookmark> UpdateAsync(UpdateBookmarkDto model, CancellationToken cancellationToken);

    /// <summary>
    /// Удаляет Закладка по модели.
    /// </summary>
    /// <param name="id">Идентификатор Закладки.</param>
    /// <param name="model">Модель Закладки.</param>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <returns>Идентификатор удаленного Закладки</returns>
    Task<Guid> DeleteAsync(Guid id, CancellationToken cancellationToken);
}
}

