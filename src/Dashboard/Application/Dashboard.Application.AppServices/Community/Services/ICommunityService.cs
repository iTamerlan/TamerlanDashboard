// ------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой EngineApp Tamerlan I.V.
//     Изменения в этом файле могут привести к неправильной работе
//     и будут потеряны в случае повторного создания кода.
// </auto-generated>
// ------------------------------------------------------------------------------

using Dashboard.Contracts.Community;

namespace Dashboard.Application.AppServices.Contexts.Community.Services

{
/// <summary>
/// Сервис работы с сообществами.
/// </summary>
public interface ICommunityService
{
    /// <summary>
    /// Возвращает Сообщество по идентификатору.
    /// </summary>
    /// <param name="id">Идентификатор Сообщества.</param>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <returns>Модель Сообщества <see cref="Domain.Communitys.Community"/></returns>
    Task<Domain.Communitys.Community> GetByIdAsync(Guid id, CancellationToken cancellationToken);

    /// <summary>
    /// Возвращает список -- Сообщества.
    /// </summary>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <returns>Список моделей Сообщества <see cref="CommunityDto"/></returns>
    Task<CommunityDto[]> GetAllAsync(CancellationToken cancellationToken);

    /// <summary>
    /// Возвращает список -- Сообщества, постранично в зависимости от размера страницы и индекса страницы.
    /// </summary>
    /// <param name="id">Идентификатор Сообщества.</param>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <param name="pageSize">Размер страницы.</param>
    /// <param name="pageIndex">Номер страницы.</param>
    /// <returns>Список моделей -- Сообщества <see cref="CommunityDto"/></returns>
    Task<CommunityDto[]> GetPageAsync(int pageSize, int pageIndex, CancellationToken cancellationToken);

    /// <summary>
    /// Создает Сообщество по модели.
    /// </summary>
    /// <param name="model">Модель Сообщества.</param>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <returns>Идентификатор созданной сущности</returns>
    Task<Guid> CreateAsync(CreateCommunityDto model, CancellationToken cancellationToken);

    /// <summary>
    /// Обновляет(изменяет) Сообщество по модели.
    /// </summary>
    /// <param name="model">Модель Сообщества.</param>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <returns>Модель Сообщества <see cref="Domain.Communitys.Community"/></returns>
    Task<Domain.Communitys.Community> UpdateAsync(UpdateCommunityDto model, CancellationToken cancellationToken);

    /// <summary>
    /// Удаляет Сообщество по модели.
    /// </summary>
    /// <param name="id">Идентификатор Сообщества.</param>
    /// <param name="model">Модель Сообщества.</param>
    /// <param name="cancellationToken">Отмена операции.</param>
    /// <returns>Идентификатор удаленного Сообщества</returns>
    Task<Guid> DeleteAsync(Guid id, CancellationToken cancellationToken);
}
}

